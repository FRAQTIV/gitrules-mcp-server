name: Publish (npm) on tag

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    name: Validate & Publish
    runs-on: ubuntu-latest
    if: github.repository == 'FRAQTIV/gitrules-mcp-server'
    permissions:
      contents: write  # needed for release notes
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      - name: Verify tag matches package.json version
        run: |
          TAG="${GITHUB_REF_NAME}"        # e.g. v0.3.2
          VERSION="${TAG#v}"             # strip leading v
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "Tag: $TAG  -> Version: $VERSION  package.json: $PKG_VERSION"
          if [ "$VERSION" != "$PKG_VERSION" ]; then
            echo "::error::Tag version ($VERSION) does not match package.json ($PKG_VERSION)" >&2
            exit 1
          fi

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -z "$NODE_AUTH_TOKEN" ]; then
            echo '::error::NPM_TOKEN secret missing'; exit 1; fi
          npm publish --access public

      - name: Generate release notes section
        id: notes
        run: |
          VERSION=$(node -p "require('./package.json').version")
          node -e "
          const fs = require('fs');
          const version = process.env.VERSION;
          const changelog = fs.readFileSync('CHANGELOG.md', 'utf8');
          const regex = new RegExp('^## \\\\[' + version.replace(/[.*+?^${}()|[\]\\\\]/g, '\\\\$&') + '\\\\].*$', 'm');
          const lines = changelog.split('\\n');
          let start = -1, end = lines.length;
          for (let i = 0; i < lines.length; i++) {
            if (start === -1 && regex.test(lines[i])) { start = i + 1; continue; }
            if (start !== -1 && /^## \[/.test(lines[i])) { end = i; break; }
          }
          let section = (start !== -1) ? lines.slice(start, end).join('\\n').trim() : '';
          if (!section) section = 'No changelog section found';
          fs.writeFileSync('RELEASE_NOTES.md', section);
          " 
          echo '--- RELEASE NOTES ---'
          cat RELEASE_NOTES.md
          echo '---------------------'
          node -e "const fs = require('fs'); const notes = fs.readFileSync('RELEASE_NOTES.md', 'utf8'); console.log('notes<<EOF\n' + notes + '\nEOF');" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ steps.notes.outputs.notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}