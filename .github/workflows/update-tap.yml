name: tap-update

on:
  push:
    tags: [ 'v*.*.*' ]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to use (e.g. v0.3.1)"
        required: false

concurrency:
  group: tap-update-${{ github.ref || github.run_id }}
  cancel-in-progress: false

jobs:
  update-tap:
    if: >-
      startsWith(github.ref, 'refs/tags/v') ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/tap retry') &&
       (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'COLLABORATOR'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      TAP_REPO: FRAQTIV/homebrew-gitrules
      FORMULA_PATH: Formula/gitrules-mcp.rb
      UPSTREAM_REPO: FRAQTIV/gitrules-mcp-server
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine tag/version
        id: ver
        run: |
          set -euo pipefail
          TAG_INPUT="${{ inputs.tag || '' }}"
          if [[ -n "${TAG_INPUT}" ]]; then
            VERSION="${TAG_INPUT}"
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION="${{ github.ref_name }}"
          else
            # Fallback to latest tag in repo
            VERSION="$(git describe --tags --abbrev=0)"
          fi
          if [[ -z "${VERSION}" ]]; then
            echo "No version tag found. Exiting." >&2
            exit 1
          fi
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Compute tarball SHA256
        id: sha
        run: |
          set -euo pipefail
          VERSION="${{ steps.ver.outputs.version }}"
          TARBALL_URL="https://github.com/${UPSTREAM_REPO}/archive/refs/tags/${VERSION}.tar.gz"
          echo "Tarball: ${TARBALL_URL}"
          curl -L -s "${TARBALL_URL}" -o source.tgz
          SHA256="$(shasum -a 256 source.tgz | awk '{print $1}')"
          echo "sha256=${SHA256}" >> "$GITHUB_OUTPUT"
          echo "tarball_url=${TARBALL_URL}" >> "$GITHUB_OUTPUT"

      - name: Clone tap repo
        run: |
          set -euo pipefail
          : "Cloning ${TAP_REPO}"
          git clone "https://x-access-token:${{ secrets.TAP_PUSH_TOKEN }}@github.com/${TAP_REPO}.git" tap

      - name: Ensure formula exists (skip if missing)
        run: |
          if [[ ! -f "tap/${FORMULA_PATH}" ]]; then
            echo "Formula not found in tap: tap/${FORMULA_PATH}. Exiting gracefully." >&2
            exit 0
          fi

      - name: Update formula file
        id: patch
        run: |
          set -euo pipefail
          cd tap
          VERSION="${{ steps.ver.outputs.version }}"
          NEW_URL="${{ steps.sha.outputs.tarball_url }}"
          NEW_SHA="${{ steps.sha.outputs.sha256 }}"

          echo "Updating ${FORMULA_PATH} to ${VERSION}"
          cp "${FORMULA_PATH}" "${FORMULA_PATH}.bak"
          # Replace url and sha256 lines
          sed -i.bak -E "s|^(\s*url\s+\").*(\")$|\1${NEW_URL}\2|" "${FORMULA_PATH}"
          sed -i.bak -E "s|^(\s*sha256\s+\").*(\")$|\1${NEW_SHA}\2|" "${FORMULA_PATH}"

          if git diff --quiet -- "${FORMULA_PATH}"; then
            echo "No changes to commit."
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "changed=true" >> "$GITHUB_OUTPUT"

      - name: Commit and push changes
        if: steps.patch.outputs.changed == 'true'
        run: |
          set -euo pipefail
          cd tap
          git config user.name "fraqtiv-bot"
          git config user.email "opensource@fraqtiv.com"
          git add "${FORMULA_PATH}"
          git commit -m "gitrules-mcp: update to ${{ steps.ver.outputs.version }}"
          git push origin HEAD:main

      - name: Summary
        run: |
          echo "Updated ${TAP_REPO}/${FORMULA_PATH} to ${{ steps.ver.outputs.version }}"
          echo "SHA256: ${{ steps.sha.outputs.sha256 }}"
          echo "Tarball: ${{ steps.sha.outputs.tarball_url }}"
